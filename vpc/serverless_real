service: vpc-proof-of-concept
frameworkVersion: '2'

# efs lambda tutorial: https://dzone.com/articles/how-to-use-efs-with-aws-lambda

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  profile: patryk
  region: us-west-2
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - sqs:*
            - efs:*
          Resource: "*"

  environment:
    QUEUE_URL: ${construct:my-queue.queueUrl}

functions:
  producer:
    handler: lambdas/producer.lambda_handler
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
     - httpApi:
         path: /send
         method: get

constructs:
  my-queue:
    type: queue
    worker:
      handler: lambdas/worker.lambda_handler

package:
  individually: true
  exclude:
    - node_modules/**
    - .serverless/**
    - .old/**

plugins:
  - serverless-lift #for sqs
  - serverless-vpc-plugin #for vpc
  - serverless-default-aws-resource-properties #for efs


resources:
  Resources:
    producer:
      Type: AWS::Lambda::Function
    worker:
      Type: AWS::Lambda::Function


custom:

  defaultAwsProperties:
    - Type: AWS::Lambda::Function
      Properties:
        FileSystemConfigs:
          - Arn: { 'Fn::GetAtt': [ efsAP, Arn ] }
            LocalMountPath: ${self:custom.fsPath}
  
  vpcConfig:
    # Whether plugin is enabled. Can be used to selectively disable plugin
    # on certain stages or configurations. Defaults to true.
    enabled: true

    cidrBlock: '10.0.0.0/16'

    # if createNatGateway is a boolean "true", a NAT Gateway and EIP will be provisioned in each zone
    # if createNatGateway is a number, that number of NAT Gateways will be provisioned
    createNatGateway: true

    # When enabled, the DB subnet will only be accessible from the Application subnet
    # Both the Public and Application subnets will be accessible from 0.0.0.0/0
    createNetworkAcl: false

    # # Whether to create the DB subnet
    # createDbSubnet: true

    # Whether to enable VPC flow logging to an S3 bucket
    createFlowLogs: false

    # # Whether to create a bastion host
    # createBastionHost: false
    # bastionHostKeyName: MyKey # required if creating a bastion host

    # Whether to create a NAT instance
    createNatInstance: false

    # Whether to create AWS Systems Manager (SSM) Parameters
    createParameters: false

    # By default, S3 and DynamoDB endpoints will be available within the VPC
    # see https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints.html
    # for a list of available service endpoints to provision within the VPC
    # (varies per region)
    services:
      - sqs

    # # Optionally specify subnet groups to create. If not provided, subnet groups
    # # for RDS, Redshift, ElasticCache and DAX will be provisioned.
    # subnetGroups:
    #   - rds

    # Whether to export stack outputs so it may be consumed by other stacks
    exportOutputs: false